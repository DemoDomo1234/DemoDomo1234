services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    networks:
      - main
    ports:
      - "5672:5672"
    restart: always

  db:
    container_name: postgres
    image: postgres:15.1-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - main
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=md5
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always

  redis:
    container_name: redis
    image: redis
    volumes:
      - ./redis.conf:/usr/local/etc/redis.conf
    command: [redis-server, /usr/local/etc/redis.conf]
    networks:
      - main

  celery:
    container_name: celery
    command: "celery -A core worker -l INFO"
    build: .
    depends_on:
      - db
      - django
      - rabbitmq
    networks:
      - main
    environment:
      - C_FORCE_ROOT="true"

    restart: always

  celery_beat:
    container_name: celery_beat
    command: "celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    build: .
    depends_on:
      - db
      - django
      - rabbitmq
    networks:
      - main
    restart: always

  django:
    container_name: django
    build: .
    depends_on:
      - db
      - redis
      - rabbitmq
      - neo4j_db
      - elasticsearch

    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py install_labels && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/usr/src/core
      - static:/usr/src/core/static
      - media:/usr/src/core/media
    links:
      - neo4j_db
    environment:
      - DEBUG=False
      - ALLOWED_HOSTS=*
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - NEO4J_BOLT_URL=bolt://neo4j:Abcd1234@neo4j_db:7687
      - DJANGO_SETTINGS_MODULE=core.settings
      - ELASTICSEARCH_DSL_HOSTS=elasticsearch:9200

    networks:
      - main
    restart: always
    expose:
      - "8000"

  neo4j_db:
    image: neo4j
    container_name: neo4j_db

    expose:
      - "7474"
      - "7687"
    volumes:
      - neo4j_data:/data/dbms
    environment:
      - NEO4J_AUTH=neo4j/Abcd1234
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - dbms.connector.bolt.listen_address=:7687
      - dbms.connector.bolt.default_advertised_address=:7687
    networks:
      - main

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.11.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - main

  kibana:
    container_name: kibana
    image: kibana:7.11.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - main

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static:/var/www/static
      - media:/var/www/media
    networks:
      - main
    restart: always

volumes:
  db_data:
  static:
  media:
  neo4j_data:

networks:
  main:
